                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module time
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _time
                                     13 	.globl _getchar_nw
                                     14 	.globl _Sys_Init
                                     15 	.globl _UART0_Init
                                     16 	.globl _SYSCLK_Init
                                     17 	.globl _SPIF
                                     18 	.globl _WCOL
                                     19 	.globl _MODF
                                     20 	.globl _RXOVRN
                                     21 	.globl _TXBSY
                                     22 	.globl _SLVSEL
                                     23 	.globl _MSTEN
                                     24 	.globl _SPIEN
                                     25 	.globl _AD0EN
                                     26 	.globl _ADCEN
                                     27 	.globl _AD0TM
                                     28 	.globl _ADCTM
                                     29 	.globl _AD0INT
                                     30 	.globl _ADCINT
                                     31 	.globl _AD0BUSY
                                     32 	.globl _ADBUSY
                                     33 	.globl _AD0CM1
                                     34 	.globl _ADSTM1
                                     35 	.globl _AD0CM0
                                     36 	.globl _ADSTM0
                                     37 	.globl _AD0WINT
                                     38 	.globl _ADWINT
                                     39 	.globl _AD0LJST
                                     40 	.globl _ADLJST
                                     41 	.globl _CF
                                     42 	.globl _CR
                                     43 	.globl _CCF4
                                     44 	.globl _CCF3
                                     45 	.globl _CCF2
                                     46 	.globl _CCF1
                                     47 	.globl _CCF0
                                     48 	.globl _CY
                                     49 	.globl _AC
                                     50 	.globl _F0
                                     51 	.globl _RS1
                                     52 	.globl _RS0
                                     53 	.globl _OV
                                     54 	.globl _F1
                                     55 	.globl _P
                                     56 	.globl _TF2
                                     57 	.globl _EXF2
                                     58 	.globl _RCLK
                                     59 	.globl _TCLK
                                     60 	.globl _EXEN2
                                     61 	.globl _TR2
                                     62 	.globl _CT2
                                     63 	.globl _CPRL2
                                     64 	.globl _BUSY
                                     65 	.globl _ENSMB
                                     66 	.globl _STA
                                     67 	.globl _STO
                                     68 	.globl _SI
                                     69 	.globl _AA
                                     70 	.globl _SMBFTE
                                     71 	.globl _SMBTOE
                                     72 	.globl _PT2
                                     73 	.globl _PS
                                     74 	.globl _PS0
                                     75 	.globl _PT1
                                     76 	.globl _PX1
                                     77 	.globl _PT0
                                     78 	.globl _PX0
                                     79 	.globl _P3_7
                                     80 	.globl _P3_6
                                     81 	.globl _P3_5
                                     82 	.globl _P3_4
                                     83 	.globl _P3_3
                                     84 	.globl _P3_2
                                     85 	.globl _P3_1
                                     86 	.globl _P3_0
                                     87 	.globl _EA
                                     88 	.globl _ET2
                                     89 	.globl _ES
                                     90 	.globl _ES0
                                     91 	.globl _ET1
                                     92 	.globl _EX1
                                     93 	.globl _ET0
                                     94 	.globl _EX0
                                     95 	.globl _P2_7
                                     96 	.globl _P2_6
                                     97 	.globl _P2_5
                                     98 	.globl _P2_4
                                     99 	.globl _P2_3
                                    100 	.globl _P2_2
                                    101 	.globl _P2_1
                                    102 	.globl _P2_0
                                    103 	.globl _S0MODE
                                    104 	.globl _SM00
                                    105 	.globl _SM0
                                    106 	.globl _SM10
                                    107 	.globl _SM1
                                    108 	.globl _MCE0
                                    109 	.globl _SM20
                                    110 	.globl _SM2
                                    111 	.globl _REN0
                                    112 	.globl _REN
                                    113 	.globl _TB80
                                    114 	.globl _TB8
                                    115 	.globl _RB80
                                    116 	.globl _RB8
                                    117 	.globl _TI0
                                    118 	.globl _TI
                                    119 	.globl _RI0
                                    120 	.globl _RI
                                    121 	.globl _P1_7
                                    122 	.globl _P1_6
                                    123 	.globl _P1_5
                                    124 	.globl _P1_4
                                    125 	.globl _P1_3
                                    126 	.globl _P1_2
                                    127 	.globl _P1_1
                                    128 	.globl _P1_0
                                    129 	.globl _TF1
                                    130 	.globl _TR1
                                    131 	.globl _TF0
                                    132 	.globl _TR0
                                    133 	.globl _IE1
                                    134 	.globl _IT1
                                    135 	.globl _IE0
                                    136 	.globl _IT0
                                    137 	.globl _P0_7
                                    138 	.globl _P0_6
                                    139 	.globl _P0_5
                                    140 	.globl _P0_4
                                    141 	.globl _P0_3
                                    142 	.globl _P0_2
                                    143 	.globl _P0_1
                                    144 	.globl _P0_0
                                    145 	.globl _PCA0CP4
                                    146 	.globl _PCA0CP3
                                    147 	.globl _PCA0CP2
                                    148 	.globl _PCA0CP1
                                    149 	.globl _PCA0CP0
                                    150 	.globl _PCA0
                                    151 	.globl _DAC1
                                    152 	.globl _DAC0
                                    153 	.globl _ADC0LT
                                    154 	.globl _ADC0GT
                                    155 	.globl _ADC0
                                    156 	.globl _RCAP4
                                    157 	.globl _TMR4
                                    158 	.globl _TMR3RL
                                    159 	.globl _TMR3
                                    160 	.globl _RCAP2
                                    161 	.globl _TMR2
                                    162 	.globl _TMR1
                                    163 	.globl _TMR0
                                    164 	.globl _WDTCN
                                    165 	.globl _PCA0CPH4
                                    166 	.globl _PCA0CPH3
                                    167 	.globl _PCA0CPH2
                                    168 	.globl _PCA0CPH1
                                    169 	.globl _PCA0CPH0
                                    170 	.globl _PCA0H
                                    171 	.globl _SPI0CN
                                    172 	.globl _EIP2
                                    173 	.globl _EIP1
                                    174 	.globl _TH4
                                    175 	.globl _TL4
                                    176 	.globl _SADDR1
                                    177 	.globl _SBUF1
                                    178 	.globl _SCON1
                                    179 	.globl _B
                                    180 	.globl _RSTSRC
                                    181 	.globl _PCA0CPL4
                                    182 	.globl _PCA0CPL3
                                    183 	.globl _PCA0CPL2
                                    184 	.globl _PCA0CPL1
                                    185 	.globl _PCA0CPL0
                                    186 	.globl _PCA0L
                                    187 	.globl _ADC0CN
                                    188 	.globl _EIE2
                                    189 	.globl _EIE1
                                    190 	.globl _RCAP4H
                                    191 	.globl _RCAP4L
                                    192 	.globl _XBR2
                                    193 	.globl _XBR1
                                    194 	.globl _XBR0
                                    195 	.globl _ACC
                                    196 	.globl _PCA0CPM4
                                    197 	.globl _PCA0CPM3
                                    198 	.globl _PCA0CPM2
                                    199 	.globl _PCA0CPM1
                                    200 	.globl _PCA0CPM0
                                    201 	.globl _PCA0MD
                                    202 	.globl _PCA0CN
                                    203 	.globl _DAC1CN
                                    204 	.globl _DAC1H
                                    205 	.globl _DAC1L
                                    206 	.globl _DAC0CN
                                    207 	.globl _DAC0H
                                    208 	.globl _DAC0L
                                    209 	.globl _REF0CN
                                    210 	.globl _PSW
                                    211 	.globl _SMB0CR
                                    212 	.globl _TH2
                                    213 	.globl _TL2
                                    214 	.globl _RCAP2H
                                    215 	.globl _RCAP2L
                                    216 	.globl _T4CON
                                    217 	.globl _T2CON
                                    218 	.globl _ADC0LTH
                                    219 	.globl _ADC0LTL
                                    220 	.globl _ADC0GTH
                                    221 	.globl _ADC0GTL
                                    222 	.globl _SMB0ADR
                                    223 	.globl _SMB0DAT
                                    224 	.globl _SMB0STA
                                    225 	.globl _SMB0CN
                                    226 	.globl _ADC0H
                                    227 	.globl _ADC0L
                                    228 	.globl _P1MDIN
                                    229 	.globl _ADC0CF
                                    230 	.globl _AMX0SL
                                    231 	.globl _AMX0CF
                                    232 	.globl _SADEN0
                                    233 	.globl _IP
                                    234 	.globl _FLACL
                                    235 	.globl _FLSCL
                                    236 	.globl _P74OUT
                                    237 	.globl _OSCICN
                                    238 	.globl _OSCXCN
                                    239 	.globl _P3
                                    240 	.globl __XPAGE
                                    241 	.globl _EMI0CN
                                    242 	.globl _SADEN1
                                    243 	.globl _P3IF
                                    244 	.globl _AMX1SL
                                    245 	.globl _ADC1CF
                                    246 	.globl _ADC1CN
                                    247 	.globl _SADDR0
                                    248 	.globl _IE
                                    249 	.globl _P3MDOUT
                                    250 	.globl _PRT3CF
                                    251 	.globl _P2MDOUT
                                    252 	.globl _PRT2CF
                                    253 	.globl _P1MDOUT
                                    254 	.globl _PRT1CF
                                    255 	.globl _P0MDOUT
                                    256 	.globl _PRT0CF
                                    257 	.globl _EMI0CF
                                    258 	.globl _EMI0TC
                                    259 	.globl _P2
                                    260 	.globl _CPT1CN
                                    261 	.globl _CPT0CN
                                    262 	.globl _SPI0CKR
                                    263 	.globl _ADC1
                                    264 	.globl _SPI0DAT
                                    265 	.globl _SPI0CFG
                                    266 	.globl _SBUF0
                                    267 	.globl _SBUF
                                    268 	.globl _SCON0
                                    269 	.globl _SCON
                                    270 	.globl _P7
                                    271 	.globl _TMR3H
                                    272 	.globl _TMR3L
                                    273 	.globl _TMR3RLH
                                    274 	.globl _TMR3RLL
                                    275 	.globl _TMR3CN
                                    276 	.globl _P1
                                    277 	.globl _PSCTL
                                    278 	.globl _CKCON
                                    279 	.globl _TH1
                                    280 	.globl _TH0
                                    281 	.globl _TL1
                                    282 	.globl _TL0
                                    283 	.globl _TMOD
                                    284 	.globl _TCON
                                    285 	.globl _PCON
                                    286 	.globl _P6
                                    287 	.globl _P5
                                    288 	.globl _P4
                                    289 	.globl _DPH
                                    290 	.globl _DPL
                                    291 	.globl _SP
                                    292 	.globl _P0
                                    293 	.globl _aligned_alloc_PARM_2
                                    294 ;--------------------------------------------------------
                                    295 ; special function registers
                                    296 ;--------------------------------------------------------
                                    297 	.area RSEG    (ABS,DATA)
      000000                        298 	.org 0x0000
                           000080   299 G$P0$0$0 == 0x0080
                           000080   300 _P0	=	0x0080
                           000081   301 G$SP$0$0 == 0x0081
                           000081   302 _SP	=	0x0081
                           000082   303 G$DPL$0$0 == 0x0082
                           000082   304 _DPL	=	0x0082
                           000083   305 G$DPH$0$0 == 0x0083
                           000083   306 _DPH	=	0x0083
                           000084   307 G$P4$0$0 == 0x0084
                           000084   308 _P4	=	0x0084
                           000085   309 G$P5$0$0 == 0x0085
                           000085   310 _P5	=	0x0085
                           000086   311 G$P6$0$0 == 0x0086
                           000086   312 _P6	=	0x0086
                           000087   313 G$PCON$0$0 == 0x0087
                           000087   314 _PCON	=	0x0087
                           000088   315 G$TCON$0$0 == 0x0088
                           000088   316 _TCON	=	0x0088
                           000089   317 G$TMOD$0$0 == 0x0089
                           000089   318 _TMOD	=	0x0089
                           00008A   319 G$TL0$0$0 == 0x008a
                           00008A   320 _TL0	=	0x008a
                           00008B   321 G$TL1$0$0 == 0x008b
                           00008B   322 _TL1	=	0x008b
                           00008C   323 G$TH0$0$0 == 0x008c
                           00008C   324 _TH0	=	0x008c
                           00008D   325 G$TH1$0$0 == 0x008d
                           00008D   326 _TH1	=	0x008d
                           00008E   327 G$CKCON$0$0 == 0x008e
                           00008E   328 _CKCON	=	0x008e
                           00008F   329 G$PSCTL$0$0 == 0x008f
                           00008F   330 _PSCTL	=	0x008f
                           000090   331 G$P1$0$0 == 0x0090
                           000090   332 _P1	=	0x0090
                           000091   333 G$TMR3CN$0$0 == 0x0091
                           000091   334 _TMR3CN	=	0x0091
                           000092   335 G$TMR3RLL$0$0 == 0x0092
                           000092   336 _TMR3RLL	=	0x0092
                           000093   337 G$TMR3RLH$0$0 == 0x0093
                           000093   338 _TMR3RLH	=	0x0093
                           000094   339 G$TMR3L$0$0 == 0x0094
                           000094   340 _TMR3L	=	0x0094
                           000095   341 G$TMR3H$0$0 == 0x0095
                           000095   342 _TMR3H	=	0x0095
                           000096   343 G$P7$0$0 == 0x0096
                           000096   344 _P7	=	0x0096
                           000098   345 G$SCON$0$0 == 0x0098
                           000098   346 _SCON	=	0x0098
                           000098   347 G$SCON0$0$0 == 0x0098
                           000098   348 _SCON0	=	0x0098
                           000099   349 G$SBUF$0$0 == 0x0099
                           000099   350 _SBUF	=	0x0099
                           000099   351 G$SBUF0$0$0 == 0x0099
                           000099   352 _SBUF0	=	0x0099
                           00009A   353 G$SPI0CFG$0$0 == 0x009a
                           00009A   354 _SPI0CFG	=	0x009a
                           00009B   355 G$SPI0DAT$0$0 == 0x009b
                           00009B   356 _SPI0DAT	=	0x009b
                           00009C   357 G$ADC1$0$0 == 0x009c
                           00009C   358 _ADC1	=	0x009c
                           00009D   359 G$SPI0CKR$0$0 == 0x009d
                           00009D   360 _SPI0CKR	=	0x009d
                           00009E   361 G$CPT0CN$0$0 == 0x009e
                           00009E   362 _CPT0CN	=	0x009e
                           00009F   363 G$CPT1CN$0$0 == 0x009f
                           00009F   364 _CPT1CN	=	0x009f
                           0000A0   365 G$P2$0$0 == 0x00a0
                           0000A0   366 _P2	=	0x00a0
                           0000A1   367 G$EMI0TC$0$0 == 0x00a1
                           0000A1   368 _EMI0TC	=	0x00a1
                           0000A3   369 G$EMI0CF$0$0 == 0x00a3
                           0000A3   370 _EMI0CF	=	0x00a3
                           0000A4   371 G$PRT0CF$0$0 == 0x00a4
                           0000A4   372 _PRT0CF	=	0x00a4
                           0000A4   373 G$P0MDOUT$0$0 == 0x00a4
                           0000A4   374 _P0MDOUT	=	0x00a4
                           0000A5   375 G$PRT1CF$0$0 == 0x00a5
                           0000A5   376 _PRT1CF	=	0x00a5
                           0000A5   377 G$P1MDOUT$0$0 == 0x00a5
                           0000A5   378 _P1MDOUT	=	0x00a5
                           0000A6   379 G$PRT2CF$0$0 == 0x00a6
                           0000A6   380 _PRT2CF	=	0x00a6
                           0000A6   381 G$P2MDOUT$0$0 == 0x00a6
                           0000A6   382 _P2MDOUT	=	0x00a6
                           0000A7   383 G$PRT3CF$0$0 == 0x00a7
                           0000A7   384 _PRT3CF	=	0x00a7
                           0000A7   385 G$P3MDOUT$0$0 == 0x00a7
                           0000A7   386 _P3MDOUT	=	0x00a7
                           0000A8   387 G$IE$0$0 == 0x00a8
                           0000A8   388 _IE	=	0x00a8
                           0000A9   389 G$SADDR0$0$0 == 0x00a9
                           0000A9   390 _SADDR0	=	0x00a9
                           0000AA   391 G$ADC1CN$0$0 == 0x00aa
                           0000AA   392 _ADC1CN	=	0x00aa
                           0000AB   393 G$ADC1CF$0$0 == 0x00ab
                           0000AB   394 _ADC1CF	=	0x00ab
                           0000AC   395 G$AMX1SL$0$0 == 0x00ac
                           0000AC   396 _AMX1SL	=	0x00ac
                           0000AD   397 G$P3IF$0$0 == 0x00ad
                           0000AD   398 _P3IF	=	0x00ad
                           0000AE   399 G$SADEN1$0$0 == 0x00ae
                           0000AE   400 _SADEN1	=	0x00ae
                           0000AF   401 G$EMI0CN$0$0 == 0x00af
                           0000AF   402 _EMI0CN	=	0x00af
                           0000AF   403 G$_XPAGE$0$0 == 0x00af
                           0000AF   404 __XPAGE	=	0x00af
                           0000B0   405 G$P3$0$0 == 0x00b0
                           0000B0   406 _P3	=	0x00b0
                           0000B1   407 G$OSCXCN$0$0 == 0x00b1
                           0000B1   408 _OSCXCN	=	0x00b1
                           0000B2   409 G$OSCICN$0$0 == 0x00b2
                           0000B2   410 _OSCICN	=	0x00b2
                           0000B5   411 G$P74OUT$0$0 == 0x00b5
                           0000B5   412 _P74OUT	=	0x00b5
                           0000B6   413 G$FLSCL$0$0 == 0x00b6
                           0000B6   414 _FLSCL	=	0x00b6
                           0000B7   415 G$FLACL$0$0 == 0x00b7
                           0000B7   416 _FLACL	=	0x00b7
                           0000B8   417 G$IP$0$0 == 0x00b8
                           0000B8   418 _IP	=	0x00b8
                           0000B9   419 G$SADEN0$0$0 == 0x00b9
                           0000B9   420 _SADEN0	=	0x00b9
                           0000BA   421 G$AMX0CF$0$0 == 0x00ba
                           0000BA   422 _AMX0CF	=	0x00ba
                           0000BB   423 G$AMX0SL$0$0 == 0x00bb
                           0000BB   424 _AMX0SL	=	0x00bb
                           0000BC   425 G$ADC0CF$0$0 == 0x00bc
                           0000BC   426 _ADC0CF	=	0x00bc
                           0000BD   427 G$P1MDIN$0$0 == 0x00bd
                           0000BD   428 _P1MDIN	=	0x00bd
                           0000BE   429 G$ADC0L$0$0 == 0x00be
                           0000BE   430 _ADC0L	=	0x00be
                           0000BF   431 G$ADC0H$0$0 == 0x00bf
                           0000BF   432 _ADC0H	=	0x00bf
                           0000C0   433 G$SMB0CN$0$0 == 0x00c0
                           0000C0   434 _SMB0CN	=	0x00c0
                           0000C1   435 G$SMB0STA$0$0 == 0x00c1
                           0000C1   436 _SMB0STA	=	0x00c1
                           0000C2   437 G$SMB0DAT$0$0 == 0x00c2
                           0000C2   438 _SMB0DAT	=	0x00c2
                           0000C3   439 G$SMB0ADR$0$0 == 0x00c3
                           0000C3   440 _SMB0ADR	=	0x00c3
                           0000C4   441 G$ADC0GTL$0$0 == 0x00c4
                           0000C4   442 _ADC0GTL	=	0x00c4
                           0000C5   443 G$ADC0GTH$0$0 == 0x00c5
                           0000C5   444 _ADC0GTH	=	0x00c5
                           0000C6   445 G$ADC0LTL$0$0 == 0x00c6
                           0000C6   446 _ADC0LTL	=	0x00c6
                           0000C7   447 G$ADC0LTH$0$0 == 0x00c7
                           0000C7   448 _ADC0LTH	=	0x00c7
                           0000C8   449 G$T2CON$0$0 == 0x00c8
                           0000C8   450 _T2CON	=	0x00c8
                           0000C9   451 G$T4CON$0$0 == 0x00c9
                           0000C9   452 _T4CON	=	0x00c9
                           0000CA   453 G$RCAP2L$0$0 == 0x00ca
                           0000CA   454 _RCAP2L	=	0x00ca
                           0000CB   455 G$RCAP2H$0$0 == 0x00cb
                           0000CB   456 _RCAP2H	=	0x00cb
                           0000CC   457 G$TL2$0$0 == 0x00cc
                           0000CC   458 _TL2	=	0x00cc
                           0000CD   459 G$TH2$0$0 == 0x00cd
                           0000CD   460 _TH2	=	0x00cd
                           0000CF   461 G$SMB0CR$0$0 == 0x00cf
                           0000CF   462 _SMB0CR	=	0x00cf
                           0000D0   463 G$PSW$0$0 == 0x00d0
                           0000D0   464 _PSW	=	0x00d0
                           0000D1   465 G$REF0CN$0$0 == 0x00d1
                           0000D1   466 _REF0CN	=	0x00d1
                           0000D2   467 G$DAC0L$0$0 == 0x00d2
                           0000D2   468 _DAC0L	=	0x00d2
                           0000D3   469 G$DAC0H$0$0 == 0x00d3
                           0000D3   470 _DAC0H	=	0x00d3
                           0000D4   471 G$DAC0CN$0$0 == 0x00d4
                           0000D4   472 _DAC0CN	=	0x00d4
                           0000D5   473 G$DAC1L$0$0 == 0x00d5
                           0000D5   474 _DAC1L	=	0x00d5
                           0000D6   475 G$DAC1H$0$0 == 0x00d6
                           0000D6   476 _DAC1H	=	0x00d6
                           0000D7   477 G$DAC1CN$0$0 == 0x00d7
                           0000D7   478 _DAC1CN	=	0x00d7
                           0000D8   479 G$PCA0CN$0$0 == 0x00d8
                           0000D8   480 _PCA0CN	=	0x00d8
                           0000D9   481 G$PCA0MD$0$0 == 0x00d9
                           0000D9   482 _PCA0MD	=	0x00d9
                           0000DA   483 G$PCA0CPM0$0$0 == 0x00da
                           0000DA   484 _PCA0CPM0	=	0x00da
                           0000DB   485 G$PCA0CPM1$0$0 == 0x00db
                           0000DB   486 _PCA0CPM1	=	0x00db
                           0000DC   487 G$PCA0CPM2$0$0 == 0x00dc
                           0000DC   488 _PCA0CPM2	=	0x00dc
                           0000DD   489 G$PCA0CPM3$0$0 == 0x00dd
                           0000DD   490 _PCA0CPM3	=	0x00dd
                           0000DE   491 G$PCA0CPM4$0$0 == 0x00de
                           0000DE   492 _PCA0CPM4	=	0x00de
                           0000E0   493 G$ACC$0$0 == 0x00e0
                           0000E0   494 _ACC	=	0x00e0
                           0000E1   495 G$XBR0$0$0 == 0x00e1
                           0000E1   496 _XBR0	=	0x00e1
                           0000E2   497 G$XBR1$0$0 == 0x00e2
                           0000E2   498 _XBR1	=	0x00e2
                           0000E3   499 G$XBR2$0$0 == 0x00e3
                           0000E3   500 _XBR2	=	0x00e3
                           0000E4   501 G$RCAP4L$0$0 == 0x00e4
                           0000E4   502 _RCAP4L	=	0x00e4
                           0000E5   503 G$RCAP4H$0$0 == 0x00e5
                           0000E5   504 _RCAP4H	=	0x00e5
                           0000E6   505 G$EIE1$0$0 == 0x00e6
                           0000E6   506 _EIE1	=	0x00e6
                           0000E7   507 G$EIE2$0$0 == 0x00e7
                           0000E7   508 _EIE2	=	0x00e7
                           0000E8   509 G$ADC0CN$0$0 == 0x00e8
                           0000E8   510 _ADC0CN	=	0x00e8
                           0000E9   511 G$PCA0L$0$0 == 0x00e9
                           0000E9   512 _PCA0L	=	0x00e9
                           0000EA   513 G$PCA0CPL0$0$0 == 0x00ea
                           0000EA   514 _PCA0CPL0	=	0x00ea
                           0000EB   515 G$PCA0CPL1$0$0 == 0x00eb
                           0000EB   516 _PCA0CPL1	=	0x00eb
                           0000EC   517 G$PCA0CPL2$0$0 == 0x00ec
                           0000EC   518 _PCA0CPL2	=	0x00ec
                           0000ED   519 G$PCA0CPL3$0$0 == 0x00ed
                           0000ED   520 _PCA0CPL3	=	0x00ed
                           0000EE   521 G$PCA0CPL4$0$0 == 0x00ee
                           0000EE   522 _PCA0CPL4	=	0x00ee
                           0000EF   523 G$RSTSRC$0$0 == 0x00ef
                           0000EF   524 _RSTSRC	=	0x00ef
                           0000F0   525 G$B$0$0 == 0x00f0
                           0000F0   526 _B	=	0x00f0
                           0000F1   527 G$SCON1$0$0 == 0x00f1
                           0000F1   528 _SCON1	=	0x00f1
                           0000F2   529 G$SBUF1$0$0 == 0x00f2
                           0000F2   530 _SBUF1	=	0x00f2
                           0000F3   531 G$SADDR1$0$0 == 0x00f3
                           0000F3   532 _SADDR1	=	0x00f3
                           0000F4   533 G$TL4$0$0 == 0x00f4
                           0000F4   534 _TL4	=	0x00f4
                           0000F5   535 G$TH4$0$0 == 0x00f5
                           0000F5   536 _TH4	=	0x00f5
                           0000F6   537 G$EIP1$0$0 == 0x00f6
                           0000F6   538 _EIP1	=	0x00f6
                           0000F7   539 G$EIP2$0$0 == 0x00f7
                           0000F7   540 _EIP2	=	0x00f7
                           0000F8   541 G$SPI0CN$0$0 == 0x00f8
                           0000F8   542 _SPI0CN	=	0x00f8
                           0000F9   543 G$PCA0H$0$0 == 0x00f9
                           0000F9   544 _PCA0H	=	0x00f9
                           0000FA   545 G$PCA0CPH0$0$0 == 0x00fa
                           0000FA   546 _PCA0CPH0	=	0x00fa
                           0000FB   547 G$PCA0CPH1$0$0 == 0x00fb
                           0000FB   548 _PCA0CPH1	=	0x00fb
                           0000FC   549 G$PCA0CPH2$0$0 == 0x00fc
                           0000FC   550 _PCA0CPH2	=	0x00fc
                           0000FD   551 G$PCA0CPH3$0$0 == 0x00fd
                           0000FD   552 _PCA0CPH3	=	0x00fd
                           0000FE   553 G$PCA0CPH4$0$0 == 0x00fe
                           0000FE   554 _PCA0CPH4	=	0x00fe
                           0000FF   555 G$WDTCN$0$0 == 0x00ff
                           0000FF   556 _WDTCN	=	0x00ff
                           008C8A   557 G$TMR0$0$0 == 0x8c8a
                           008C8A   558 _TMR0	=	0x8c8a
                           008D8B   559 G$TMR1$0$0 == 0x8d8b
                           008D8B   560 _TMR1	=	0x8d8b
                           00CDCC   561 G$TMR2$0$0 == 0xcdcc
                           00CDCC   562 _TMR2	=	0xcdcc
                           00CBCA   563 G$RCAP2$0$0 == 0xcbca
                           00CBCA   564 _RCAP2	=	0xcbca
                           009594   565 G$TMR3$0$0 == 0x9594
                           009594   566 _TMR3	=	0x9594
                           009392   567 G$TMR3RL$0$0 == 0x9392
                           009392   568 _TMR3RL	=	0x9392
                           00F5F4   569 G$TMR4$0$0 == 0xf5f4
                           00F5F4   570 _TMR4	=	0xf5f4
                           00E5E4   571 G$RCAP4$0$0 == 0xe5e4
                           00E5E4   572 _RCAP4	=	0xe5e4
                           00BFBE   573 G$ADC0$0$0 == 0xbfbe
                           00BFBE   574 _ADC0	=	0xbfbe
                           00C5C4   575 G$ADC0GT$0$0 == 0xc5c4
                           00C5C4   576 _ADC0GT	=	0xc5c4
                           00C7C6   577 G$ADC0LT$0$0 == 0xc7c6
                           00C7C6   578 _ADC0LT	=	0xc7c6
                           00D3D2   579 G$DAC0$0$0 == 0xd3d2
                           00D3D2   580 _DAC0	=	0xd3d2
                           00D6D5   581 G$DAC1$0$0 == 0xd6d5
                           00D6D5   582 _DAC1	=	0xd6d5
                           00F9E9   583 G$PCA0$0$0 == 0xf9e9
                           00F9E9   584 _PCA0	=	0xf9e9
                           00FAEA   585 G$PCA0CP0$0$0 == 0xfaea
                           00FAEA   586 _PCA0CP0	=	0xfaea
                           00FBEB   587 G$PCA0CP1$0$0 == 0xfbeb
                           00FBEB   588 _PCA0CP1	=	0xfbeb
                           00FCEC   589 G$PCA0CP2$0$0 == 0xfcec
                           00FCEC   590 _PCA0CP2	=	0xfcec
                           00FDED   591 G$PCA0CP3$0$0 == 0xfded
                           00FDED   592 _PCA0CP3	=	0xfded
                           00FEEE   593 G$PCA0CP4$0$0 == 0xfeee
                           00FEEE   594 _PCA0CP4	=	0xfeee
                                    595 ;--------------------------------------------------------
                                    596 ; special function bits
                                    597 ;--------------------------------------------------------
                                    598 	.area RSEG    (ABS,DATA)
      000000                        599 	.org 0x0000
                           000080   600 G$P0_0$0$0 == 0x0080
                           000080   601 _P0_0	=	0x0080
                           000081   602 G$P0_1$0$0 == 0x0081
                           000081   603 _P0_1	=	0x0081
                           000082   604 G$P0_2$0$0 == 0x0082
                           000082   605 _P0_2	=	0x0082
                           000083   606 G$P0_3$0$0 == 0x0083
                           000083   607 _P0_3	=	0x0083
                           000084   608 G$P0_4$0$0 == 0x0084
                           000084   609 _P0_4	=	0x0084
                           000085   610 G$P0_5$0$0 == 0x0085
                           000085   611 _P0_5	=	0x0085
                           000086   612 G$P0_6$0$0 == 0x0086
                           000086   613 _P0_6	=	0x0086
                           000087   614 G$P0_7$0$0 == 0x0087
                           000087   615 _P0_7	=	0x0087
                           000088   616 G$IT0$0$0 == 0x0088
                           000088   617 _IT0	=	0x0088
                           000089   618 G$IE0$0$0 == 0x0089
                           000089   619 _IE0	=	0x0089
                           00008A   620 G$IT1$0$0 == 0x008a
                           00008A   621 _IT1	=	0x008a
                           00008B   622 G$IE1$0$0 == 0x008b
                           00008B   623 _IE1	=	0x008b
                           00008C   624 G$TR0$0$0 == 0x008c
                           00008C   625 _TR0	=	0x008c
                           00008D   626 G$TF0$0$0 == 0x008d
                           00008D   627 _TF0	=	0x008d
                           00008E   628 G$TR1$0$0 == 0x008e
                           00008E   629 _TR1	=	0x008e
                           00008F   630 G$TF1$0$0 == 0x008f
                           00008F   631 _TF1	=	0x008f
                           000090   632 G$P1_0$0$0 == 0x0090
                           000090   633 _P1_0	=	0x0090
                           000091   634 G$P1_1$0$0 == 0x0091
                           000091   635 _P1_1	=	0x0091
                           000092   636 G$P1_2$0$0 == 0x0092
                           000092   637 _P1_2	=	0x0092
                           000093   638 G$P1_3$0$0 == 0x0093
                           000093   639 _P1_3	=	0x0093
                           000094   640 G$P1_4$0$0 == 0x0094
                           000094   641 _P1_4	=	0x0094
                           000095   642 G$P1_5$0$0 == 0x0095
                           000095   643 _P1_5	=	0x0095
                           000096   644 G$P1_6$0$0 == 0x0096
                           000096   645 _P1_6	=	0x0096
                           000097   646 G$P1_7$0$0 == 0x0097
                           000097   647 _P1_7	=	0x0097
                           000098   648 G$RI$0$0 == 0x0098
                           000098   649 _RI	=	0x0098
                           000098   650 G$RI0$0$0 == 0x0098
                           000098   651 _RI0	=	0x0098
                           000099   652 G$TI$0$0 == 0x0099
                           000099   653 _TI	=	0x0099
                           000099   654 G$TI0$0$0 == 0x0099
                           000099   655 _TI0	=	0x0099
                           00009A   656 G$RB8$0$0 == 0x009a
                           00009A   657 _RB8	=	0x009a
                           00009A   658 G$RB80$0$0 == 0x009a
                           00009A   659 _RB80	=	0x009a
                           00009B   660 G$TB8$0$0 == 0x009b
                           00009B   661 _TB8	=	0x009b
                           00009B   662 G$TB80$0$0 == 0x009b
                           00009B   663 _TB80	=	0x009b
                           00009C   664 G$REN$0$0 == 0x009c
                           00009C   665 _REN	=	0x009c
                           00009C   666 G$REN0$0$0 == 0x009c
                           00009C   667 _REN0	=	0x009c
                           00009D   668 G$SM2$0$0 == 0x009d
                           00009D   669 _SM2	=	0x009d
                           00009D   670 G$SM20$0$0 == 0x009d
                           00009D   671 _SM20	=	0x009d
                           00009D   672 G$MCE0$0$0 == 0x009d
                           00009D   673 _MCE0	=	0x009d
                           00009E   674 G$SM1$0$0 == 0x009e
                           00009E   675 _SM1	=	0x009e
                           00009E   676 G$SM10$0$0 == 0x009e
                           00009E   677 _SM10	=	0x009e
                           00009F   678 G$SM0$0$0 == 0x009f
                           00009F   679 _SM0	=	0x009f
                           00009F   680 G$SM00$0$0 == 0x009f
                           00009F   681 _SM00	=	0x009f
                           00009F   682 G$S0MODE$0$0 == 0x009f
                           00009F   683 _S0MODE	=	0x009f
                           0000A0   684 G$P2_0$0$0 == 0x00a0
                           0000A0   685 _P2_0	=	0x00a0
                           0000A1   686 G$P2_1$0$0 == 0x00a1
                           0000A1   687 _P2_1	=	0x00a1
                           0000A2   688 G$P2_2$0$0 == 0x00a2
                           0000A2   689 _P2_2	=	0x00a2
                           0000A3   690 G$P2_3$0$0 == 0x00a3
                           0000A3   691 _P2_3	=	0x00a3
                           0000A4   692 G$P2_4$0$0 == 0x00a4
                           0000A4   693 _P2_4	=	0x00a4
                           0000A5   694 G$P2_5$0$0 == 0x00a5
                           0000A5   695 _P2_5	=	0x00a5
                           0000A6   696 G$P2_6$0$0 == 0x00a6
                           0000A6   697 _P2_6	=	0x00a6
                           0000A7   698 G$P2_7$0$0 == 0x00a7
                           0000A7   699 _P2_7	=	0x00a7
                           0000A8   700 G$EX0$0$0 == 0x00a8
                           0000A8   701 _EX0	=	0x00a8
                           0000A9   702 G$ET0$0$0 == 0x00a9
                           0000A9   703 _ET0	=	0x00a9
                           0000AA   704 G$EX1$0$0 == 0x00aa
                           0000AA   705 _EX1	=	0x00aa
                           0000AB   706 G$ET1$0$0 == 0x00ab
                           0000AB   707 _ET1	=	0x00ab
                           0000AC   708 G$ES0$0$0 == 0x00ac
                           0000AC   709 _ES0	=	0x00ac
                           0000AC   710 G$ES$0$0 == 0x00ac
                           0000AC   711 _ES	=	0x00ac
                           0000AD   712 G$ET2$0$0 == 0x00ad
                           0000AD   713 _ET2	=	0x00ad
                           0000AF   714 G$EA$0$0 == 0x00af
                           0000AF   715 _EA	=	0x00af
                           0000B0   716 G$P3_0$0$0 == 0x00b0
                           0000B0   717 _P3_0	=	0x00b0
                           0000B1   718 G$P3_1$0$0 == 0x00b1
                           0000B1   719 _P3_1	=	0x00b1
                           0000B2   720 G$P3_2$0$0 == 0x00b2
                           0000B2   721 _P3_2	=	0x00b2
                           0000B3   722 G$P3_3$0$0 == 0x00b3
                           0000B3   723 _P3_3	=	0x00b3
                           0000B4   724 G$P3_4$0$0 == 0x00b4
                           0000B4   725 _P3_4	=	0x00b4
                           0000B5   726 G$P3_5$0$0 == 0x00b5
                           0000B5   727 _P3_5	=	0x00b5
                           0000B6   728 G$P3_6$0$0 == 0x00b6
                           0000B6   729 _P3_6	=	0x00b6
                           0000B7   730 G$P3_7$0$0 == 0x00b7
                           0000B7   731 _P3_7	=	0x00b7
                           0000B8   732 G$PX0$0$0 == 0x00b8
                           0000B8   733 _PX0	=	0x00b8
                           0000B9   734 G$PT0$0$0 == 0x00b9
                           0000B9   735 _PT0	=	0x00b9
                           0000BA   736 G$PX1$0$0 == 0x00ba
                           0000BA   737 _PX1	=	0x00ba
                           0000BB   738 G$PT1$0$0 == 0x00bb
                           0000BB   739 _PT1	=	0x00bb
                           0000BC   740 G$PS0$0$0 == 0x00bc
                           0000BC   741 _PS0	=	0x00bc
                           0000BC   742 G$PS$0$0 == 0x00bc
                           0000BC   743 _PS	=	0x00bc
                           0000BD   744 G$PT2$0$0 == 0x00bd
                           0000BD   745 _PT2	=	0x00bd
                           0000C0   746 G$SMBTOE$0$0 == 0x00c0
                           0000C0   747 _SMBTOE	=	0x00c0
                           0000C1   748 G$SMBFTE$0$0 == 0x00c1
                           0000C1   749 _SMBFTE	=	0x00c1
                           0000C2   750 G$AA$0$0 == 0x00c2
                           0000C2   751 _AA	=	0x00c2
                           0000C3   752 G$SI$0$0 == 0x00c3
                           0000C3   753 _SI	=	0x00c3
                           0000C4   754 G$STO$0$0 == 0x00c4
                           0000C4   755 _STO	=	0x00c4
                           0000C5   756 G$STA$0$0 == 0x00c5
                           0000C5   757 _STA	=	0x00c5
                           0000C6   758 G$ENSMB$0$0 == 0x00c6
                           0000C6   759 _ENSMB	=	0x00c6
                           0000C7   760 G$BUSY$0$0 == 0x00c7
                           0000C7   761 _BUSY	=	0x00c7
                           0000C8   762 G$CPRL2$0$0 == 0x00c8
                           0000C8   763 _CPRL2	=	0x00c8
                           0000C9   764 G$CT2$0$0 == 0x00c9
                           0000C9   765 _CT2	=	0x00c9
                           0000CA   766 G$TR2$0$0 == 0x00ca
                           0000CA   767 _TR2	=	0x00ca
                           0000CB   768 G$EXEN2$0$0 == 0x00cb
                           0000CB   769 _EXEN2	=	0x00cb
                           0000CC   770 G$TCLK$0$0 == 0x00cc
                           0000CC   771 _TCLK	=	0x00cc
                           0000CD   772 G$RCLK$0$0 == 0x00cd
                           0000CD   773 _RCLK	=	0x00cd
                           0000CE   774 G$EXF2$0$0 == 0x00ce
                           0000CE   775 _EXF2	=	0x00ce
                           0000CF   776 G$TF2$0$0 == 0x00cf
                           0000CF   777 _TF2	=	0x00cf
                           0000D0   778 G$P$0$0 == 0x00d0
                           0000D0   779 _P	=	0x00d0
                           0000D1   780 G$F1$0$0 == 0x00d1
                           0000D1   781 _F1	=	0x00d1
                           0000D2   782 G$OV$0$0 == 0x00d2
                           0000D2   783 _OV	=	0x00d2
                           0000D3   784 G$RS0$0$0 == 0x00d3
                           0000D3   785 _RS0	=	0x00d3
                           0000D4   786 G$RS1$0$0 == 0x00d4
                           0000D4   787 _RS1	=	0x00d4
                           0000D5   788 G$F0$0$0 == 0x00d5
                           0000D5   789 _F0	=	0x00d5
                           0000D6   790 G$AC$0$0 == 0x00d6
                           0000D6   791 _AC	=	0x00d6
                           0000D7   792 G$CY$0$0 == 0x00d7
                           0000D7   793 _CY	=	0x00d7
                           0000D8   794 G$CCF0$0$0 == 0x00d8
                           0000D8   795 _CCF0	=	0x00d8
                           0000D9   796 G$CCF1$0$0 == 0x00d9
                           0000D9   797 _CCF1	=	0x00d9
                           0000DA   798 G$CCF2$0$0 == 0x00da
                           0000DA   799 _CCF2	=	0x00da
                           0000DB   800 G$CCF3$0$0 == 0x00db
                           0000DB   801 _CCF3	=	0x00db
                           0000DC   802 G$CCF4$0$0 == 0x00dc
                           0000DC   803 _CCF4	=	0x00dc
                           0000DE   804 G$CR$0$0 == 0x00de
                           0000DE   805 _CR	=	0x00de
                           0000DF   806 G$CF$0$0 == 0x00df
                           0000DF   807 _CF	=	0x00df
                           0000E8   808 G$ADLJST$0$0 == 0x00e8
                           0000E8   809 _ADLJST	=	0x00e8
                           0000E8   810 G$AD0LJST$0$0 == 0x00e8
                           0000E8   811 _AD0LJST	=	0x00e8
                           0000E9   812 G$ADWINT$0$0 == 0x00e9
                           0000E9   813 _ADWINT	=	0x00e9
                           0000E9   814 G$AD0WINT$0$0 == 0x00e9
                           0000E9   815 _AD0WINT	=	0x00e9
                           0000EA   816 G$ADSTM0$0$0 == 0x00ea
                           0000EA   817 _ADSTM0	=	0x00ea
                           0000EA   818 G$AD0CM0$0$0 == 0x00ea
                           0000EA   819 _AD0CM0	=	0x00ea
                           0000EB   820 G$ADSTM1$0$0 == 0x00eb
                           0000EB   821 _ADSTM1	=	0x00eb
                           0000EB   822 G$AD0CM1$0$0 == 0x00eb
                           0000EB   823 _AD0CM1	=	0x00eb
                           0000EC   824 G$ADBUSY$0$0 == 0x00ec
                           0000EC   825 _ADBUSY	=	0x00ec
                           0000EC   826 G$AD0BUSY$0$0 == 0x00ec
                           0000EC   827 _AD0BUSY	=	0x00ec
                           0000ED   828 G$ADCINT$0$0 == 0x00ed
                           0000ED   829 _ADCINT	=	0x00ed
                           0000ED   830 G$AD0INT$0$0 == 0x00ed
                           0000ED   831 _AD0INT	=	0x00ed
                           0000EE   832 G$ADCTM$0$0 == 0x00ee
                           0000EE   833 _ADCTM	=	0x00ee
                           0000EE   834 G$AD0TM$0$0 == 0x00ee
                           0000EE   835 _AD0TM	=	0x00ee
                           0000EF   836 G$ADCEN$0$0 == 0x00ef
                           0000EF   837 _ADCEN	=	0x00ef
                           0000EF   838 G$AD0EN$0$0 == 0x00ef
                           0000EF   839 _AD0EN	=	0x00ef
                           0000F8   840 G$SPIEN$0$0 == 0x00f8
                           0000F8   841 _SPIEN	=	0x00f8
                           0000F9   842 G$MSTEN$0$0 == 0x00f9
                           0000F9   843 _MSTEN	=	0x00f9
                           0000FA   844 G$SLVSEL$0$0 == 0x00fa
                           0000FA   845 _SLVSEL	=	0x00fa
                           0000FB   846 G$TXBSY$0$0 == 0x00fb
                           0000FB   847 _TXBSY	=	0x00fb
                           0000FC   848 G$RXOVRN$0$0 == 0x00fc
                           0000FC   849 _RXOVRN	=	0x00fc
                           0000FD   850 G$MODF$0$0 == 0x00fd
                           0000FD   851 _MODF	=	0x00fd
                           0000FE   852 G$WCOL$0$0 == 0x00fe
                           0000FE   853 _WCOL	=	0x00fe
                           0000FF   854 G$SPIF$0$0 == 0x00ff
                           0000FF   855 _SPIF	=	0x00ff
                                    856 ;--------------------------------------------------------
                                    857 ; overlayable register banks
                                    858 ;--------------------------------------------------------
                                    859 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        860 	.ds 8
                                    861 ;--------------------------------------------------------
                                    862 ; internal ram data
                                    863 ;--------------------------------------------------------
                                    864 	.area DSEG    (DATA)
                           000000   865 Ltime.aligned_alloc$size$1$39==.
      000000                        866 _aligned_alloc_PARM_2:
      000000                        867 	.ds 2
                                    868 ;--------------------------------------------------------
                                    869 ; overlayable items in internal ram 
                                    870 ;--------------------------------------------------------
                                    871 	.area	OSEG    (OVR,DATA)
                                    872 	.area	OSEG    (OVR,DATA)
                                    873 ;--------------------------------------------------------
                                    874 ; Stack segment in internal ram 
                                    875 ;--------------------------------------------------------
                                    876 	.area	SSEG
      000000                        877 __start__stack:
      000000                        878 	.ds	1
                                    879 
                                    880 ;--------------------------------------------------------
                                    881 ; indirectly addressable internal ram data
                                    882 ;--------------------------------------------------------
                                    883 	.area ISEG    (DATA)
                                    884 ;--------------------------------------------------------
                                    885 ; absolute internal ram data
                                    886 ;--------------------------------------------------------
                                    887 	.area IABS    (ABS,DATA)
                                    888 	.area IABS    (ABS,DATA)
                                    889 ;--------------------------------------------------------
                                    890 ; bit data
                                    891 ;--------------------------------------------------------
                                    892 	.area BSEG    (BIT)
                                    893 ;--------------------------------------------------------
                                    894 ; paged external ram data
                                    895 ;--------------------------------------------------------
                                    896 	.area PSEG    (PAG,XDATA)
                                    897 ;--------------------------------------------------------
                                    898 ; external ram data
                                    899 ;--------------------------------------------------------
                                    900 	.area XSEG    (XDATA)
                                    901 ;--------------------------------------------------------
                                    902 ; absolute external ram data
                                    903 ;--------------------------------------------------------
                                    904 	.area XABS    (ABS,XDATA)
                                    905 ;--------------------------------------------------------
                                    906 ; external initialized ram data
                                    907 ;--------------------------------------------------------
                                    908 	.area XISEG   (XDATA)
                                    909 	.area HOME    (CODE)
                                    910 	.area GSINIT0 (CODE)
                                    911 	.area GSINIT1 (CODE)
                                    912 	.area GSINIT2 (CODE)
                                    913 	.area GSINIT3 (CODE)
                                    914 	.area GSINIT4 (CODE)
                                    915 	.area GSINIT5 (CODE)
                                    916 	.area GSINIT  (CODE)
                                    917 	.area GSFINAL (CODE)
                                    918 	.area CSEG    (CODE)
                                    919 ;--------------------------------------------------------
                                    920 ; interrupt vector 
                                    921 ;--------------------------------------------------------
                                    922 	.area HOME    (CODE)
      000000                        923 __interrupt_vect:
      000000 02r00r00         [24]  924 	ljmp	__sdcc_gsinit_startup
                                    925 ;--------------------------------------------------------
                                    926 ; global & static initialisations
                                    927 ;--------------------------------------------------------
                                    928 	.area HOME    (CODE)
                                    929 	.area GSINIT  (CODE)
                                    930 	.area GSFINAL (CODE)
                                    931 	.area GSINIT  (CODE)
                                    932 	.globl __sdcc_gsinit_startup
                                    933 	.globl __sdcc_program_startup
                                    934 	.globl __start__stack
                                    935 	.globl __mcs51_genXINIT
                                    936 	.globl __mcs51_genXRAMCLEAR
                                    937 	.globl __mcs51_genRAMCLEAR
                                    938 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  939 	ljmp	__sdcc_program_startup
                                    940 ;--------------------------------------------------------
                                    941 ; Home
                                    942 ;--------------------------------------------------------
                                    943 	.area HOME    (CODE)
                                    944 	.area HOME    (CODE)
      000003                        945 __sdcc_program_startup:
      000003 02r00r77         [24]  946 	ljmp	_main
                                    947 ;	return from main will return to caller
                                    948 ;--------------------------------------------------------
                                    949 ; code
                                    950 ;--------------------------------------------------------
                                    951 	.area CSEG    (CODE)
                                    952 ;------------------------------------------------------------
                                    953 ;Allocation info for local variables in function 'SYSCLK_Init'
                                    954 ;------------------------------------------------------------
                                    955 ;i                         Allocated to registers r6 r7 
                                    956 ;------------------------------------------------------------
                           000000   957 	G$SYSCLK_Init$0$0 ==.
                           000000   958 	C$c8051_SDCC.h$42$0$0 ==.
                                    959 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:42: void SYSCLK_Init(void)
                                    960 ;	-----------------------------------------
                                    961 ;	 function SYSCLK_Init
                                    962 ;	-----------------------------------------
      000000                        963 _SYSCLK_Init:
                           000007   964 	ar7 = 0x07
                           000006   965 	ar6 = 0x06
                           000005   966 	ar5 = 0x05
                           000004   967 	ar4 = 0x04
                           000003   968 	ar3 = 0x03
                           000002   969 	ar2 = 0x02
                           000001   970 	ar1 = 0x01
                           000000   971 	ar0 = 0x00
                           000000   972 	C$c8051_SDCC.h$46$1$2 ==.
                                    973 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:46: OSCXCN = 0x67;                      // start external oscillator with
      000000 75 B1 67         [24]  974 	mov	_OSCXCN,#0x67
                           000003   975 	C$c8051_SDCC.h$49$1$2 ==.
                                    976 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:49: for (i=0; i < 256; i++);            // wait for oscillator to start
      000003 7E 00            [12]  977 	mov	r6,#0x00
      000005 7F 01            [12]  978 	mov	r7,#0x01
      000007                        979 00107$:
      000007 EE               [12]  980 	mov	a,r6
      000008 24 FF            [12]  981 	add	a,#0xff
      00000A FC               [12]  982 	mov	r4,a
      00000B EF               [12]  983 	mov	a,r7
      00000C 34 FF            [12]  984 	addc	a,#0xff
      00000E FD               [12]  985 	mov	r5,a
      00000F 8C 06            [24]  986 	mov	ar6,r4
      000011 8D 07            [24]  987 	mov	ar7,r5
      000013 EC               [12]  988 	mov	a,r4
      000014 4D               [12]  989 	orl	a,r5
      000015 70 F0            [24]  990 	jnz	00107$
                           000017   991 	C$c8051_SDCC.h$51$1$2 ==.
                                    992 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:51: while (!(OSCXCN & 0x80));           // Wait for crystal osc. to settle
      000017                        993 00102$:
      000017 E5 B1            [12]  994 	mov	a,_OSCXCN
      000019 30 E7 FB         [24]  995 	jnb	acc.7,00102$
                           00001C   996 	C$c8051_SDCC.h$53$1$2 ==.
                                    997 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:53: OSCICN = 0x88;                      // select external oscillator as SYSCLK
      00001C 75 B2 88         [24]  998 	mov	_OSCICN,#0x88
                           00001F   999 	C$c8051_SDCC.h$56$1$2 ==.
                           00001F  1000 	XG$SYSCLK_Init$0$0 ==.
      00001F 22               [24] 1001 	ret
                                   1002 ;------------------------------------------------------------
                                   1003 ;Allocation info for local variables in function 'UART0_Init'
                                   1004 ;------------------------------------------------------------
                           000020  1005 	G$UART0_Init$0$0 ==.
                           000020  1006 	C$c8051_SDCC.h$64$1$2 ==.
                                   1007 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:64: void UART0_Init(void)
                                   1008 ;	-----------------------------------------
                                   1009 ;	 function UART0_Init
                                   1010 ;	-----------------------------------------
      000020                       1011 _UART0_Init:
                           000020  1012 	C$c8051_SDCC.h$66$1$4 ==.
                                   1013 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:66: SCON0  = 0x50;                      // SCON0: mode 1, 8-bit UART, enable RX
      000020 75 98 50         [24] 1014 	mov	_SCON0,#0x50
                           000023  1015 	C$c8051_SDCC.h$67$1$4 ==.
                                   1016 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:67: TMOD   = 0x20;                      // TMOD: timer 1, mode 2, 8-bit reload
      000023 75 89 20         [24] 1017 	mov	_TMOD,#0x20
                           000026  1018 	C$c8051_SDCC.h$68$1$4 ==.
                                   1019 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:68: TH1    = 0xFF&-(SYSCLK/BAUDRATE/16);     // set Timer1 reload value for baudrate
      000026 75 8D DC         [24] 1020 	mov	_TH1,#0xdc
                           000029  1021 	C$c8051_SDCC.h$69$1$4 ==.
                                   1022 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:69: TR1    = 1;                         // start Timer1
      000029 D2 8E            [12] 1023 	setb	_TR1
                           00002B  1024 	C$c8051_SDCC.h$70$1$4 ==.
                                   1025 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:70: CKCON |= 0x10;                      // Timer1 uses SYSCLK as time base
      00002B 43 8E 10         [24] 1026 	orl	_CKCON,#0x10
                           00002E  1027 	C$c8051_SDCC.h$71$1$4 ==.
                                   1028 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:71: PCON  |= 0x80;                      // SMOD00 = 1 (disable baud rate 
      00002E 43 87 80         [24] 1029 	orl	_PCON,#0x80
                           000031  1030 	C$c8051_SDCC.h$73$1$4 ==.
                                   1031 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:73: TI0    = 1;                         // Indicate TX0 ready
      000031 D2 99            [12] 1032 	setb	_TI0
                           000033  1033 	C$c8051_SDCC.h$74$1$4 ==.
                                   1034 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:74: P0MDOUT |= 0x01;                    // Set TX0 to push/pull
      000033 43 A4 01         [24] 1035 	orl	_P0MDOUT,#0x01
                           000036  1036 	C$c8051_SDCC.h$75$1$4 ==.
                           000036  1037 	XG$UART0_Init$0$0 ==.
      000036 22               [24] 1038 	ret
                                   1039 ;------------------------------------------------------------
                                   1040 ;Allocation info for local variables in function 'Sys_Init'
                                   1041 ;------------------------------------------------------------
                           000037  1042 	G$Sys_Init$0$0 ==.
                           000037  1043 	C$c8051_SDCC.h$83$1$4 ==.
                                   1044 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:83: void Sys_Init(void)
                                   1045 ;	-----------------------------------------
                                   1046 ;	 function Sys_Init
                                   1047 ;	-----------------------------------------
      000037                       1048 _Sys_Init:
                           000037  1049 	C$c8051_SDCC.h$85$1$6 ==.
                                   1050 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:85: WDTCN = 0xde;			// disable watchdog timer
      000037 75 FF DE         [24] 1051 	mov	_WDTCN,#0xde
                           00003A  1052 	C$c8051_SDCC.h$86$1$6 ==.
                                   1053 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:86: WDTCN = 0xad;
      00003A 75 FF AD         [24] 1054 	mov	_WDTCN,#0xad
                           00003D  1055 	C$c8051_SDCC.h$88$1$6 ==.
                                   1056 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:88: SYSCLK_Init();			// initialize oscillator
      00003D 12r00r00         [24] 1057 	lcall	_SYSCLK_Init
                           000040  1058 	C$c8051_SDCC.h$89$1$6 ==.
                                   1059 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:89: UART0_Init();			// initialize UART0
      000040 12r00r20         [24] 1060 	lcall	_UART0_Init
                           000043  1061 	C$c8051_SDCC.h$91$1$6 ==.
                                   1062 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:91: XBR0 |= 0x04;
      000043 43 E1 04         [24] 1063 	orl	_XBR0,#0x04
                           000046  1064 	C$c8051_SDCC.h$92$1$6 ==.
                                   1065 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:92: XBR2 |= 0x40;                    	// Enable crossbar and weak pull-ups
      000046 43 E3 40         [24] 1066 	orl	_XBR2,#0x40
                           000049  1067 	C$c8051_SDCC.h$93$1$6 ==.
                           000049  1068 	XG$Sys_Init$0$0 ==.
      000049 22               [24] 1069 	ret
                                   1070 ;------------------------------------------------------------
                                   1071 ;Allocation info for local variables in function 'putchar'
                                   1072 ;------------------------------------------------------------
                                   1073 ;c                         Allocated to registers r7 
                                   1074 ;------------------------------------------------------------
                           00004A  1075 	G$putchar$0$0 ==.
                           00004A  1076 	C$c8051_SDCC.h$98$1$6 ==.
                                   1077 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:98: void putchar(char c)
                                   1078 ;	-----------------------------------------
                                   1079 ;	 function putchar
                                   1080 ;	-----------------------------------------
      00004A                       1081 _putchar:
      00004A AF 82            [24] 1082 	mov	r7,dpl
                           00004C  1083 	C$c8051_SDCC.h$100$1$8 ==.
                                   1084 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:100: while (!TI0); 
      00004C                       1085 00101$:
                           00004C  1086 	C$c8051_SDCC.h$101$1$8 ==.
                                   1087 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:101: TI0 = 0;
      00004C 10 99 02         [24] 1088 	jbc	_TI0,00112$
      00004F 80 FB            [24] 1089 	sjmp	00101$
      000051                       1090 00112$:
                           000051  1091 	C$c8051_SDCC.h$102$1$8 ==.
                                   1092 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:102: SBUF0 = c;
      000051 8F 99            [24] 1093 	mov	_SBUF0,r7
                           000053  1094 	C$c8051_SDCC.h$103$1$8 ==.
                           000053  1095 	XG$putchar$0$0 ==.
      000053 22               [24] 1096 	ret
                                   1097 ;------------------------------------------------------------
                                   1098 ;Allocation info for local variables in function 'getchar'
                                   1099 ;------------------------------------------------------------
                                   1100 ;c                         Allocated to registers 
                                   1101 ;------------------------------------------------------------
                           000054  1102 	G$getchar$0$0 ==.
                           000054  1103 	C$c8051_SDCC.h$108$1$8 ==.
                                   1104 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:108: char getchar(void)
                                   1105 ;	-----------------------------------------
                                   1106 ;	 function getchar
                                   1107 ;	-----------------------------------------
      000054                       1108 _getchar:
                           000054  1109 	C$c8051_SDCC.h$111$1$10 ==.
                                   1110 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:111: while (!RI0);
      000054                       1111 00101$:
                           000054  1112 	C$c8051_SDCC.h$112$1$10 ==.
                                   1113 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:112: RI0 = 0;
      000054 10 98 02         [24] 1114 	jbc	_RI0,00112$
      000057 80 FB            [24] 1115 	sjmp	00101$
      000059                       1116 00112$:
                           000059  1117 	C$c8051_SDCC.h$113$1$10 ==.
                                   1118 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:113: c = SBUF0;
      000059 85 99 82         [24] 1119 	mov	dpl,_SBUF0
                           00005C  1120 	C$c8051_SDCC.h$114$1$10 ==.
                                   1121 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:114: putchar(c);                          // echo to terminal
      00005C 12r00r4A         [24] 1122 	lcall	_putchar
                           00005F  1123 	C$c8051_SDCC.h$115$1$10 ==.
                                   1124 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:115: return SBUF0;
      00005F 85 99 82         [24] 1125 	mov	dpl,_SBUF0
                           000062  1126 	C$c8051_SDCC.h$116$1$10 ==.
                           000062  1127 	XG$getchar$0$0 ==.
      000062 22               [24] 1128 	ret
                                   1129 ;------------------------------------------------------------
                                   1130 ;Allocation info for local variables in function 'getchar_nw'
                                   1131 ;------------------------------------------------------------
                                   1132 ;c                         Allocated to registers 
                                   1133 ;------------------------------------------------------------
                           000063  1134 	G$getchar_nw$0$0 ==.
                           000063  1135 	C$c8051_SDCC.h$121$1$10 ==.
                                   1136 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:121: char getchar_nw(void)
                                   1137 ;	-----------------------------------------
                                   1138 ;	 function getchar_nw
                                   1139 ;	-----------------------------------------
      000063                       1140 _getchar_nw:
                           000063  1141 	C$c8051_SDCC.h$124$1$12 ==.
                                   1142 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:124: if (!RI0) return 0xFF;
      000063 20 98 05         [24] 1143 	jb	_RI0,00102$
      000066 75 82 FF         [24] 1144 	mov	dpl,#0xff
      000069 80 0B            [24] 1145 	sjmp	00104$
      00006B                       1146 00102$:
                           00006B  1147 	C$c8051_SDCC.h$127$2$13 ==.
                                   1148 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:127: RI0 = 0;
      00006B C2 98            [12] 1149 	clr	_RI0
                           00006D  1150 	C$c8051_SDCC.h$128$2$13 ==.
                                   1151 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:128: c = SBUF0;
      00006D 85 99 82         [24] 1152 	mov	dpl,_SBUF0
                           000070  1153 	C$c8051_SDCC.h$129$2$13 ==.
                                   1154 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:129: putchar(c);                          // echo to terminal
      000070 12r00r4A         [24] 1155 	lcall	_putchar
                           000073  1156 	C$c8051_SDCC.h$130$2$13 ==.
                                   1157 ;	C:/Program Files/SDCC/bin/../include/mcs51/c8051_SDCC.h:130: return SBUF0;
      000073 85 99 82         [24] 1158 	mov	dpl,_SBUF0
      000076                       1159 00104$:
                           000076  1160 	C$c8051_SDCC.h$132$1$12 ==.
                           000076  1161 	XG$getchar_nw$0$0 ==.
      000076 22               [24] 1162 	ret
                                   1163 ;------------------------------------------------------------
                                   1164 ;Allocation info for local variables in function 'main'
                                   1165 ;------------------------------------------------------------
                           000077  1166 	G$main$0$0 ==.
                           000077  1167 	C$time.c$9$1$12 ==.
                                   1168 ;	C:\SiLabs\LITEC\Lab1-2\time.c:9: void main(void)
                                   1169 ;	-----------------------------------------
                                   1170 ;	 function main
                                   1171 ;	-----------------------------------------
      000077                       1172 _main:
                           000077  1173 	C$time.c$11$1$54 ==.
                                   1174 ;	C:\SiLabs\LITEC\Lab1-2\time.c:11: time(0);
      000077 90 00 00         [24] 1175 	mov	dptr,#0x0000
      00007A 75 F0 00         [24] 1176 	mov	b,#0x00
      00007D 12r00r00         [24] 1177 	lcall	_time
                           000080  1178 	C$time.c$13$1$54 ==.
                           000080  1179 	XG$main$0$0 ==.
      000080 22               [24] 1180 	ret
                                   1181 	.area CSEG    (CODE)
                                   1182 	.area CONST   (CODE)
                                   1183 	.area XINIT   (CODE)
                                   1184 	.area CABS    (ABS,CODE)
