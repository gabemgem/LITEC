/*  Names: Gabe Maayan, Maria Hill, Amina Ali
    Section: 2B
    Date: 10/2/17
    File name: lab2
    Description:
*/
/*
  This program demonstrates the use of T0 interrupts. The code will count the
  number of T0 timer overflows that occur while a slide switch is in the ON position.
*/

#include <c8051_SDCC.h>// include files. This file is available online
#include <stdio.h>
#include <stdlib.h>

//-----------------------------------------------------------------------------
// Function Prototypes
//-----------------------------------------------------------------------------
void Port_Init(void);      	// Initialize ports for input and output
void Timer_Init(void);     	// Initialize Timer 0 
void ADC_Init(void);		// Initialize ADC
void Interrupt_Init(void); 	//Initialize interrupts
void Timer0_ISR(void) __interrupt 1;
void ADC_Convert(void);		//Get POT value
unsigned char random(void);	//Get random value 0-7

//-----------------------------------------------------------------------------
// Global Variables
//-----------------------------------------------------------------------------

//INPUTS-----------------------------------
__sbit __at 0x91 POT;	//Potentiometer
__sbit __at 0xB0 PB0;	//Push-buttons
__sbit __at 0xB1 PB1;
__sbit __at 0xA1 PBEnter;
__sbit __at 0xA2 PB2;
__sbit __at 0xA0 SS;    // Slide Switch associated with Port 2 Pin 0

//OUTPUTS----------------------------------
__sbit __at 0xB3 BILED1;
__sbit __at 0xB4 BILED2;
__sbit __at 0xA3 LED2;
__sbit __at 0xB5 LED1;
__sbit __at 0xB6 LED0;
__sbit __at 0xB7 BUZZER;

unsigned int counts=0;	//Timer counter
unsigned int temp=0;	//Temp counts value
unsigned char input=0;	//user input
unsigned char speed=0;	//speed of game
unsigned int wait=0;	//time of delays
unsigned int score=0;	//total score of game
unsigned int points=0;	//points from each try of the game
unsigned char num=0;	//random number for the game
unsigned char i=0;		//variable for for-loops



void main(void)
{
	Sys_Init();
	Port_Init();
	ADC_Init();
	Interrupt_Init();
	Timer_Init();

	putchar(' ');
	printf("Start\r\n");

	getchar();

	LED0=LED1=LED2=1;
	BILED1=BILED1=1;
	BUZZER=1;

	while(1) {
		printf("\rPBEnter:%u, PB0:%u, PB1:%u, PB2:%u, SS:%u\n", PBEnter, PB0, PB1, PB2, SS);
		LED0=0;
		LED1=0;
		LED2=0;


	}

	

	

}


void Port_Init(void) {		//initialize ports
	//Port 1
	P1MDOUT &= ~0x02;		//=>xxxx xx0x
	P1MDIN &= ~0x02;		//=>xxxx xx0x
	P1 |= 0x02;				//=>xxxx xx1x

	//Port 2
	P2MDOUT |= 0x08;		//=>xxxx 1xxx
	P2MDOUT &= ~0x07;		//=>xxxx 1000
	P2 |= 0x07;				//=>xxxx x111

	//Port 3
	P3MDOUT |= 0xF8;		//=>1111 1xxx
	P3MDOUT &= ~0x03;		//=>1111 1x00
	P3 |= 0x03;				//=>xxxx xx11
}

void Interrupt_Init(void) {	//initialize timer interrupt
	IE |= 0x02;				//enable Timer0 Interrupt request
	EA = 1;					//enable global interrupts
}

void Timer_Init(void) {		//initialize timer
	CKCON |= 0x08;  		// Timer0 uses SYSCLK as source
    TMOD &= 0xF0;   		// clear the 4 least significant bits
    TMOD |= 0x01;   		// Timer0 in mode 1
    TR0 = 0;           		// Stop Timer0
    TMR0 = 0;           	// Clear high & low byte of T0
}

void ADC_Init(void) {		//initialize ADC
	REF0CN = 0x03; 			//set Vref to use 2.4V
	ADC1CF |= 0x01;			//set gain of 1
	ADC1CN = 0x80; 			//enable A/D converter
	
}

void Timer0_ISR(void) __interrupt 1 {//initialize Timer0 overflow interrupt
	TF0=0;					//clear interrupt flag
	counts++;				//increment counter variable
}

void ADC_Convert(void) {	//get POT value
	AMX1SL = 1;				//Set ADC to convert value on pin 1
	ADC1CN &= ~0x20;
	ADC1CN |= 0x10;
	printf("\r\n1");
	while((ADC1CN & 0x20)==0x00);
	printf("\r\n2");
	speed = ADC1;
}

unsigned char random(void) {//get random value(0-7)
	return (rand()%8); 		//return a random value between 0 and 7
}