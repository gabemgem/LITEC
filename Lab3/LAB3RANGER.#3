#include <stdio.h>
#include <c8051_SDCC.h>


//8051 Initialization Functions

void Port_Init(void);
void PCA_Init(void);
void XBR0_Init(void);
void Interrupt_Init(void);
void Drive_Motor(void);
unsigned int PCA_Start = 28671; //20ms
unsigned int PW_MIN = 2027;      //1.1 ms  ((MAX-PCA_Start)/20) *(1.1)
unsigned int PW_MAX = 3502;      //1.9 
unsigned int PW_NEUT = 2764;
unsigned int count = 0;
unsigned int MOTOR_PW = 0;
unsigned char input;


//Main Functions

void main(void)
{
	//initialize board
	Sys_Init();
	putchar(' ');
	Port_Init();
	XBR0_Init();
	PCA_Init();
	Interrupt_Init();

	//print beginning message
	printf("Embedded control Drive Motor Control\r\n");
	//set initial value
	MOTOR_PW = PW_NEUT;
	PCA0CP2 = 0xFFFF - MOTOR_PW;
	count=0;
	while(count < 50);
	while(1)
		Drive_Motor();


}

//-----------------------------------------------------
//Drive Motor
//-----------------------------------------------------
//
// Vary the pulsewidth based on the user input to channge the speed of the drive motor
//

void Drive_Motor()
{
	printf("Please press f to increase speed or s to decrease speed\r\n");

	//wait for a key to be pressed
	input = getchar();
	if(input == 'f')
	{
		if(MOTOR_PW < PW_MAX)
		MOTOR_PW = MOTOR_PW + 10;
	}
	else if(input == 's')
	{
		if(MOTOR_PW > PW_MIN)
		MOTOR_PW = MOTOR_PW - 10;
	}
	printf("MOTOR_PW: %u\n\r", MOTOR_PW);
	PCA0CP2 = 0xFFFF - MOTOR_PW;
}


//-----------------------------
//Port_Init
//-----------------------------
//
// Sets up ports for input and output
//

void Port_Init()
{
	P1MDOUT |= 0x04 ;  //set output pin for CEX2 in push_pull mode
}


//----------------------------------
//Interrupt_Init
//----------------------------------
//
// Set up ports for input and output
//

void Interrupt_Init()
{
	EIE1 |= 0x08;
	EA = 1;
}


//-----------------------------------
//XBR0_Init
//-----------------------------------
//
// Set up the crossbar
//

void XBR0_Init()
{
	XBR0 = 0x27; 
}


//---------------------------
//PCA_Init
//---------------------------
//
// Set up programmable counter array
//

void PCA_Init(void)
{
	//uses 16 bit couter, SYSCLK/12
	PCA0MD = 0x81;
	PCA0CPM2 = 0xC2;
	PCA0CN |= 0x40;
}


//-----------------------------------
//PCA_ISR
//-----------------------------------
//
// Interrupt Service Routine for PCA
//

void PCA_ISR(void) __interrupt 9
{
	if(CF)
	{
		PCA0 = PCA_Start;
		CF = 0;
		count++;
	}
	else PCA0CN &= 0xC0;
	
}


